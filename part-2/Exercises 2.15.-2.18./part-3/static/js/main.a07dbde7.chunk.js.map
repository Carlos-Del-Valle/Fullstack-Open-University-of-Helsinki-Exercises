{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","components/ErrorNotification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","onChange","handleFilterChange","value","PersonForm","onSubmit","handleSubmit","handleNameChange","nameValue","handleNumberChange","numberValue","type","Person","name","number","id","onClick","handleClick","Persons","persons","personsList","map","person","Notifications","message","className","ErrorNotifications","baseUrl","axios","get","then","response","data","newPerson","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","nameFilter","setNameFilter","addMessage","setAddedMessage","errorMessage","setErrorMessage","useEffect","personsService","initialPersons","filteredPersons","filter","toLocaleLowerCase","includes","toLowerCase","handleChange","event","target","preventDefault","some","p","find","window","confirm","updatedPerson","returnedPerson","catch","error","console","setTimeout","Promise","resolve","confirmAndUpdatePerson","wasUpdated","log","replace","match","p1","p2","toUpperCase","createNewPerson","concat","parseInt","dataset","Number","isNaN","deleted","err","finally","removePersonWithId","Notification","ErrorNotification","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a07dbde7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = props => {\n    return (\n        <div>\n            Filter by Name:{\" \"}\n            <input onChange={props.handleFilterChange} value={props.value} />\n        </div>\n    );\n};\n\nexport default Filter;","import React from \"react\";\n\nconst PersonForm = props => {\n    return (\n        <div>\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    Name:{\" \"}\n                    <input onChange={props.handleNameChange} value={props.nameValue} />\n                </div>\n                <div>\n                    Number:{\" \"}\n                    <input\n                        onChange={props.handleNumberChange}\n                        value={props.numberValue}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">Add</button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = props => {\n    return (\n        <div>\n            <strong>Name:</strong> {props.name} <strong>Number:</strong>{\" \"}\n            {props.number}{\" \"}\n            <button data-id={props.id} onClick={props.handleClick}>\n                Delete\n            </button>\n        </div>\n    );\n};\n\nconst Persons = ({ persons, handleClick }) => {\n    const personsList = persons.map(person => {\n        return (\n            <Person\n                key={person.id}\n                id={person.id}\n                name={person.name}\n                number={person.number}\n                handleClick={handleClick}\n            />\n        );\n    });\n\n    return <div>{personsList}</div>;\n};\n\nexport default Persons;\n","const Notifications = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"addedStyle\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notifications;","const ErrorNotifications = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className=\"errorStyle\">\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorNotifications;","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/persons'\n\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson);\n    return request.then(response => response.data);\n};\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson);\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request\n};\n\nexport default {\n    getAll: getAll,\n    create: create,\n    update: update,\n    remove: remove,\n\n}","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notifications from \"./components/Notification\";\nimport ErrorNotifications from \"./components/ErrorNotification\";\nimport personsService from \"./services/persons\";\n\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\");\n    const [nameFilter, setNameFilter] = useState(\"\");\n    const [addMessage, setAddedMessage] = useState(\"\");\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    useEffect(() => {\n        personsService.getAll().then(initialPersons => {\n            setPersons(initialPersons);\n        });\n    }, []);\n\n    // const lowerCasedNames = persons.map(person => {\n    //   return person.name.toLocaleLowerCase();\n    // });\n\n    const filteredPersons = persons.filter(person => {\n        return person.name.toLocaleLowerCase().includes(nameFilter.toLowerCase());\n    });\n\n    const handleChange = (event, type) => {\n        switch (type) {\n            case \"nameFilter\":\n                setNameFilter(event.target.value);\n                break;\n            case \"name\":\n                setNewName(event.target.value);\n                break;\n            case \"number\":\n                setNewNumber(event.target.value);\n                break;\n            default:\n                break;\n        }\n    };\n    const createNewPerson = () => {\n        const replacer = (match, p1, p2) => {\n            return p1.toUpperCase() + p2.toLocaleLowerCase();\n        };\n        const titleCasedName = newName.replace(/\\b([a-zA-Z])(\\w+)/g, replacer);\n        const person = {\n            name: titleCasedName,\n            number: newNumber\n        };\n\n        setAddedMessage(\n            `Added '${person.name}'`\n        )\n        setTimeout(() => {\n            setAddedMessage(null)\n        }, 5000)\n\n        return person;\n    };\n\n    const confirmAndUpdatePerson = () => {\n        const person = persons.find(\n            p => p.name.toLowerCase() === newName.toLowerCase()\n        );\n        const wantsToUpdate = window.confirm(\n            `${person.name} is already added to the phonebook, ` +\n            \"replace the old number with a new one?\"\n        );\n\n        if (wantsToUpdate) {\n            const updatedPerson = { ...person, number: newNumber };\n            const id = person.id;\n            return personsService\n                .update(id, updatedPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.map(p => (p.id !== id ? p : returnedPerson)));\n                    return true;\n                })\n                .catch(error => {\n                    console.error(error);\n\n                    setErrorMessage(\n                        `The person ${person.name} does not exist on the server`\n\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n\n\n                    setPersons(persons.filter(p => p.id !== id));\n                });\n        } else {\n            return Promise.resolve(false);\n        }\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n            const nameExists = persons.some(\n                p => p.name.toLowerCase() === newName.toLowerCase()\n            );\n\n            if (nameExists) {\n                confirmAndUpdatePerson().then(wasUpdated => {\n                    if (wasUpdated) console.log(\"Person Updated Successfully\");\n                    else console.log(\"User Opted Not To Update Person\");\n                });\n            } else {\n                const person = createNewPerson();\n                personsService.create(person).then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson));\n                });\n            }\n\n            setNewName(\"\");\n            setNewNumber(\"\");\n        };\n\n        const removePersonWithId = id => {\n            let deleted = true;\n\n            personsService\n                .remove(id)\n                .catch(err => {\n                    console.log(err);\n\n                    setErrorMessage(\n                        `The person does not exist on the server`\n\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n\n                    deleted = false;\n                })\n                .finally(() => {\n                    if (deleted) {\n                        setPersons(persons.filter(p => p.id !== id));\n                    }\n                });\n        };\n        const handleClick = (event, type) => {\n            switch (type) {\n                case \"deletePerson\":\n                    const id = parseInt(event.target.dataset.id);\n                    if (Number.isNaN(id) || !id) break;\n                    const person = persons.find(p => p.id === id);\n                    const wantsToDelete = window.confirm(`Delete ${person.name}?`);\n                    if (wantsToDelete) removePersonWithId(id);\n                    break;\n                default:\n                    break;\n            }\n        };\n        return (\n            <div>\n                <h2>Phonebook</h2>\n                <Notifications message={addMessage} />\n                <ErrorNotifications message={errorMessage} />\n                <Filter\n                    handleFilterChange={event => handleChange(event, \"nameFilter\")}\n                    value={nameFilter}\n                />\n                <h3>Add a New:</h3>\n                <PersonForm\n                    nameValue={newName}\n                    numberValue={newNumber}\n                    handleSubmit={event => handleSubmit(event)}\n                    handleNameChange={event => handleChange(event, \"name\")}\n                    handleNumberChange={event => handleChange(event, \"number\")}\n                />\n                <h3>Numbers</h3>\n                <Persons\n                    persons={filteredPersons}\n                    handleClick={event => handleClick(event, \"deletePerson\")}\n                />\n            </div>\n        );\n    };\n    export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}